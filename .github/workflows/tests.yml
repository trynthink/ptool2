name: tests
on:
  push:
  pull_request:
    types: [ synchronize, opened ]
jobs:

  code-quality-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Get contents from tip of branch on push
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v2
      - name: Install Node dependencies
        run: npm install
      - name: Check for valid JSON
        run: grunt jsonreview -v
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Check Python code quality
        run: flake8 --exclude docs/conf.py --max-line-length=100

  python-tests:
    runs-on: ubuntu-latest

    # Specify python versions to run
    strategy:
      matrix:
        python: ['3.8', '3.9', '3.10']

    steps:
      - name: Get contents from tip of branch on push
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy>=1.16 pandas>=2.2 scipy requests numpy-financial matplotlib
      - name: Run tests
        run: python -m unittest discover -p '*_test.py'

  integration-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    env:
      MEASURES: "Best Com. Lighting (EE+DF)|Best Com. Air Sealing (New).json"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy>=1.16 pandas>=2.2 scipy requests numpy-financial matplotlib xlsxwriter
      - name: Select measure subset
        run: |
          shopt -s extglob
          cd ecm_definitions/ && rm -f !("energyplus_data"|"package_ecms.json"|"Best Res. HPWH (EE+DFâ€“FS).json"|"Best Com. Air Sealing (New).json") && cd ../
          echo "[]" > ecm_definitions/package_ecms.json 
          mv tests/test_files/*.csv ecm_definitions/energyplus_data/savings_shapes/
      - name: Run ecm_prep.py
        run: printf 1| python ecm_prep.py --alt_regions      
      - name: Run run.py
        run: python run.py 
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: results
          path: ./results/*.json
      - name: Commit test results
        run: |
          branch_name="${{ github.head_ref }}"
          git pull origin $branch_name
          cp -r ./results/*.json ./tests/test_results
          git add ./tests/test_results/*.json
          if [[ $(git diff --cached --exit-code) ]]; then
            git config --global user.email "github-action@users.noreply.github.com"
            git config --global user.name "GitHub Action"
            git commit -m "Upload test results."
            echo "Pushing to branch: $branch_name"
            git push -u origin $branch_name
          fi
