name: tests
on:
  push:
  pull_request:
    types: [opened, ready_for_review]
jobs:

  code-quality-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Get contents from tip of branch on push
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v2
      - name: Install Node dependencies
        run: npm install
      - name: Check for valid JSON
        run: grunt jsonreview -v
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8==6.0
      - name: Check Python code quality
        run: flake8 --exclude docs/conf.py --max-line-length=100

  python-tests:
    runs-on: ubuntu-latest

    # Specify python versions to run
    strategy:
      matrix:
        python: ['3.8', '3.9', '3.10']

    steps:
      - name: Get contents from tip of branch on push
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy>=1.16 pandas>=2.2 scipy requests numpy-financial matplotlib backoff
      - name: Run tests
        run: python -m unittest discover -p '*_test.py'

  check-PR:
    # Check if there is a PR - allows one main workflow with dependency on previous jobs
    needs: [code-quality-checks, python-tests]
    runs-on: ubuntu-latest
    outputs:
      PR_status: ${{ steps.PR.outputs.pr_found }}
      PR: ${{ steps.PR.outputs.pr }}
    steps:
      - name: Check if PR
        uses: 8BitJonny/gh-get-current-pr@2.2.0
        id: PR
        with:
          filterOutClosed: true
          filterOutDraft: true

  integration-tests:
    needs: [check-PR]
    if: (needs.check-PR.outputs.PR_status == 'true' && fromJSON(needs.check-PR.outputs.PR).base.ref == 'master') || github.ref == 'refs/heads/master'
    uses: ./.github/workflows/integration_tests.yml
    secrets: inherit
